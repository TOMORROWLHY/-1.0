#pragma once
#ifndef DATA_H_INCLUDED
#define DATA_H_INCLUDED

/*数据模块*/

//界面数组
int windowShape[25][26] =
{
  {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
  {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
}; // 边框为1， 游戏池长度为14


//第一维：保存七组方块类型
//第二维：保存每种方块的四种形态
//第三维、第四维：保存方块数据
//对于不同模式的选择 ，在第四种创新模式中，我们不改变数组
//而是通过生成的随机数对其取不同的模实现

int block[10][4][4][4] =
{
    {//z型
      {{1,1,0,0},{0,1,1,0},{0,0,0,0},{0,0,0,0}},
      {{0,1,0,0},{1,1,0,0},{1,0,0,0},{0,0,0,0}},
      {{1,0,0,0},{1,1,0,0},{0,1,0,0},{0,0,0,0}},
      {{0,1,1,0},{1,1,0,0},{0,0,0,0},{0,0,0,0}},
    },
    {//s型
      {{0,1,1,0},{1,1,0,0},{0,0,0,0},{0,0,0,0}},
      {{1,0,0,0},{1,1,0,0},{0,1,0,0},{0,0,0,0}},
      {{0,1,1,0},{1,1,0,0},{0,0,0,0},{0,0,0,0}},
      {{1,0,0,0},{1,1,0,0},{0,1,0,0},{0,0,0,0}},
    },
    {//L型
      {{1,0,0,0},{1,0,0,0},{1,1,0,0},{0,0,0,0}},
      {{1,1,1,0},{1,0,0,0},{0,0,0,0},{0,0,0,0}},
      {{1,1,0,0},{0,1,0,0},{0,1,0,0},{0,0,0,0}},
      {{0,0,1,0},{1,1,1,0},{0,0,0,0},{0,0,0,0}},
    },
    {//J型
      {{0,1,0,0},{0,1,0,0},{1,1,0,0},{0,0,0,0}},
      {{1,0,0,0},{1,1,1,0},{0,0,0,0},{0,0,0,0}},
      {{1,1,0,0},{1,0,0,0},{1,0,0,0},{0,0,0,0}},
      {{1,1,1,0},{0,0,1,0},{0,0,0,0},{0,0,0,0}},
    },
    {//I型
      {{0,0,0,0},{1,1,1,1},{0,0,0,0},{0,0,0,0}},
      {{0,1,0,0},{0,1,0,0},{0,1,0,0},{0,1,0,0}},
      {{0,0,0,0},{0,0,0,0},{1,1,1,1},{0,0,0,0}},
      {{0,0,1,0},{0,0,1,0},{0,0,1,0},{0,0,1,0}},
    },
    {//T型
      {{1,1,1,0},{0,1,0,0},{0,0,0,0},{0,0,0,0}},
      {{0,1,0,0},{1,1,0,0},{0,1,0,0},{0,0,0,0}},
      {{0,1,0,0},{1,1,1,0},{0,0,0,0},{0,0,0,0}},
      {{1,0,0,0},{1,1,0,0},{1,0,0,0},{0,0,0,0}},
    },
    {//田型
      {{1,1,0,0},{1,1,0,0},{0,0,0,0},{0,0,0,0}},
      {{1,1,0,0},{1,1,0,0},{0,0,0,0},{0,0,0,0}},
      {{1,1,0,0},{1,1,0,0},{0,0,0,0},{0,0,0,0}},
      {{1,1,0,0},{1,1,0,0},{0,0,0,0},{0,0,0,0}},
    },
   {//十型
      {{0,1,0,0},{1,1,1,0},{0,1,0,0},{0,0,0,0}},
      {{0,1,0,0},{1,1,1,0},{0,1,0,0},{0,0,0,0}},
      {{0,1,0,0},{1,1,1,0},{0,1,0,0},{0,0,0,0}},
      {{0,1,0,0},{1,1,1,0},{0,1,0,0},{0,0,0,0}},
    },
    {//凹型
      {{1,0,1,0},{1,1,1,0},{0,0,0,0},{0,0,0,0}},
      {{0,1,1,0},{0,1,0,0},{0,1,1,0},{0,0,0,0}},
      {{0,0,0,0},{1,1,1,0},{1,0,1,0},{0,0,0,0}},
      {{1,1,0,0},{0,1,0,0},{1,1,0,0},{0,0,0,0}},
    },
    {//蛇型
      {{0,1,1,0},{0,1,0,0},{1,1,0,0},{0,0,0,0}},
      {{1,0,0,0},{1,1,1,0},{0,0,1,0},{0,0,0,0}},
      {{0,1,1,0},{0,1,0,0},{1,1,0,0},{0,0,0,0}},
      {{1,0,0,0},{1,1,1,0},{0,0,1,0},{0,0,0,0}},
    },
};
#endif // DATA_H_INCLUDED